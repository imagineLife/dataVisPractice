HERE...
- make legend clickable
	- 'highlight' the selected legend value


- Implement unidirectional dataflow
	OVERVIEW
	- create a 'stateful' value called 'selectedCategory'
		stores the selected legend val
	- create a 'stateful' value called 'selectLegend'
		gets passed to map-drawing logic
		SETS the other 'selectedCategory' val
	- onClick
		- set the state 'selectedCategory' val
		- re-draw the map, with newly update 'selectedCategory' value
	-Update the map rendering fn
		- pass the onCLick selectLegend fn


	onClick selectLegend stateful function dev
	1. make selectLegend fn in 'parent' scope of index.js
	2. in index.js pass onClick selectLegend to the colorLegend.call params
	3. in colorLegend.js add selectLegend to props destructured vals
	4. in colorLegend.js call the selectLegend fn on the .on('click') method

	stateful selectedLegendVal
	1. in index.js make selectedLegendVal
	2. onClick in parent scope set selectedLegendVal to d
		for dev output as console.log({selkectedLegendVal})
	3. 


- make the selected legend corresponding countries 'highlighted'


- move the choropleth map to its own function